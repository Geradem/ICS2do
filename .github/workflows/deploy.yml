name: Deploy with test check

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Dar permisos de ejecución a jest
        run: chmod +x ./node_modules/.bin/jest

      - name: Run tests and create flag if failed
        shell: bash
        run: |
          if ! npx jest; then
            echo "TEST_FAILED" > test_failed.txt
          fi
          ls -l # Debug: muestra archivos en el workspace

      - name: Debug test_failed.txt
        shell: bash
        run: |
          if [ -f test_failed.txt ]; then
            echo "test_failed.txt existe"
            cat test_failed.txt
          else
            echo "test_failed.txt NO existe"
          fi

      - name: Prepare deploy folder
        shell: bash
        run: |
          rm -rf deploy
          mkdir -p deploy
          if [ -f test_failed.txt ]; then
            cp maintenance/index.html deploy/index.html
          else
            cp index.html deploy/index.html
            mkdir -p deploy/assets
            cp -r assets/* deploy/assets/
          fi
          echo "Contenido de deploy:"
          ls -l deploy

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./deploy

      - name: Notificar a Slack si el sitio está fuera de servicio
        run: |
          if [ -f test_failed.txt ]; then
            python3 -m pip install --upgrade pip
            python3 -m pip install requests
            SLACK_TOKEN="${{ secrets.SLACK_TOKEN }}" \
            SLACK_FUERA_DE_SERVICIO="${{ secrets.SLACK_FUERA_DE_SERVICIO }}" \
            python3 scripts/slack_notify_outage.py
          else
            echo "No se requiere notificación a Slack."
          fi

      - name: Notificar por WhatsApp si el sitio está fuera de servicio
        run: |
          if [ -f test_failed.txt ]; then
            python3 -m pip install requests
            CALLMEBOT_PHONE="${{ secrets.CALLMEBOT_PHONE }}" \
            CALLMEBOT_APIKEY="${{ secrets.CALLMEBOT_APIKEY }}" \
            CALLMEBOT_MENSAJE="El sitio está FUERA DE SERVICIO: los tests fallaron y se desplegó la página de mantenimiento." \
            python3 scripts/send_whatsapp_callmebot.py
          else
            echo "No se requiere notificación por WhatsApp."
          fi